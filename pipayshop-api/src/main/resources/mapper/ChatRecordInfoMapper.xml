<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pipayshopapi.mapper.ChatRecordInfoMapper">


    <select id="getChatRecord" resultType="com.example.pipayshopapi.entity.vo.ChatVO">
        SELECT * FROM (
                SELECT
                    sender_id, message, send_time
                FROM
                    chat_record_info
                WHERE
                    sender_id = #{chatDataVO.senderId} and receiver_id = #{chatDataVO.receiverId} and del_flag = 0
            UNION
                SELECT
                    sender_id, message, send_time
                FROM
                    chat_record_info
                WHERE
                    sender_id = #{chatDataVO.receiverId} and receiver_id = #{chatDataVO.senderId} and del_flag = 0
        ) AS chat
        ORDER BY
            send_time ASC
        LIMIT ${chatDataVO.page}, ${chatDataVO.limit}
    </select>


    <select id="getChatRecordSum" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM (
            SELECT
                sender_id, message, send_time
            FROM
                chat_record_info
            WHERE
                sender_id = #{chatDataVO.senderId} and receiver_id = #{chatDataVO.receiverId} and del_flag = 0
        UNION
            SELECT
                sender_id, message, send_time
            FROM
                chat_record_info
            WHERE
                sender_id = #{chatDataVO.receiverId} and receiver_id = #{chatDataVO.senderId} and del_flag = 0
        ) AS chat
    </select>

    <!--前端卖家模块,我作为顾客找商家聊天，聊天表插入的是我的用户id和商家的网店id-->
    <select id="getChatRecordAsUser" resultType="com.example.pipayshopapi.entity.vo.ChatListVO">
        SELECT
            i.item_id AS chatObjectId, i.item_name AS chatObjectName,
            g.origin_path as userImage, c.newMessage, c.newMessageTime
        FROM
            item_info i
         join
        (
            SELECT
                CASE
            WHEN c1.sender_id = #{userId} THEN c1.receiver_id
            ELSE c1.sender_id
            END AS partner_id,
            c1.message AS newMessage,
            c1.send_time AS newMessageTime
            FROM
            chat_record_info c1
            WHERE
            c1.del_flag = 0
            AND (c1.sender_id = #{userId} OR c1.receiver_id = #{userId})
            AND c1.send_time = (
            SELECT MAX(c2.send_time)
            FROM chat_record_info c2
            WHERE c2.del_flag = 0
            AND (c2.sender_id = #{userId} OR c2.receiver_id = #{userId})
            AND (
            (c2.sender_id = c1.sender_id AND c2.receiver_id = c1.receiver_id)
            OR (c2.sender_id = c1.receiver_id AND c2.receiver_id = c1.sender_id)
            )
            )
        ) AS c
        ON
            c.partner_id = i.item_id
        left join image g
        on g.image_id=i.user_image
        ORDER BY
            c.newMessageTime DESC
    </select>
    <!--前端买家模块,用网店item_id查询，意思时我作为商家和顾客聊天，但是聊天表插入的是我的网店item_id-->
    <select id="getChatRecordAsItem" resultType="com.example.pipayshopapi.entity.vo.ChatListVO">
        SELECT
            u.uid AS chatObjectId, u.pi_name AS chatObjectName,
            g.origin_path as userImage, c.newMessage, c.newMessageTime
        FROM
        user_info u
         join
        (
        SELECT
        CASE
        WHEN c1.sender_id = #{itemId} THEN c1.receiver_id
        ELSE c1.sender_id
        END AS partner_id,
        c1.message AS newMessage,
        c1.send_time AS newMessageTime
        FROM
        chat_record_info c1
        WHERE
        c1.del_flag = 0
        AND (c1.sender_id = #{itemId} OR c1.receiver_id = #{itemId})
        AND c1.send_time = (
        SELECT MAX(c2.send_time)
        FROM chat_record_info c2
        WHERE c2.del_flag = 0
        AND (c2.sender_id = #{itemId} OR c2.receiver_id = #{itemId})
        AND (
        (c2.sender_id = c1.sender_id AND c2.receiver_id = c1.receiver_id)
        OR (c2.sender_id = c1.receiver_id AND c2.receiver_id = c1.sender_id)
        )
        )
        ) AS c
        ON
        c.partner_id = u.uid
        left join image g
        on g.image_id=u.user_image
        ORDER BY
        c.newMessageTime DESC
    </select>
</mapper>
