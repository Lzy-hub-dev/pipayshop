<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.pipayshopapi.mapper.ItemCommodityInfoMapper">
    <update id="addStock">
        UPDATE
            item_commodity_info
        SET
            inventory = inventory+#{num}
        WHERE
            commodity_id=#{commodityId}
    </update>
    <update id="reduceStock">
        UPDATE
            item_commodity_info
        SET
            inventory = inventory-#{num}
        WHERE
            commodity_id=#{commodityId}
          AND
            inventory>=#{num}
    </update>

    <select id="commodityOfCateList" resultType="com.example.pipayshopapi.entity.vo.CommodityVO">
        SELECT
            i.commodity_id, i.item_commodity_name, i.origin_price, i.price, i.details,g.origin_path as avatarImag, it.membership
        FROM
            item_commodity_info i
        JOIN
            item_info it
        ON
            it.item_id = i.item_id
        JOIN
            item_commodity_category c
        ON
            i.category_id = c.category_id
        JOIN
            country_commodity cc
        ON
            cc.commodity_id = I.commodity_id
        join
            image g
        on
            g.image_id=i.avatar_imag
        WHERE
            c.category_id = #{secondCategoryId} AND i.status = 0 AND cc.country_code = #{countryCode}
        ORDER BY
            i.create_time DESC
        LIMIT
            ${startIndex} , ${number}
    </select>

    <select id="listCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM item_commodity_info as i
                 JOIN item_commodity_category as c on i.category_id = c.category_id
        where c.category_id = #{secondCategoryId}
          and i.status = 0
    </select>
    <select id="itemCommodityChoose" resultType="com.example.pipayshopapi.entity.vo.CommodityVO">
        select i.commodity_id,i.item_commodity_name,i.origin_price,i.price,i.details,g.origin_path as avatar_imag,it.membership
        FROM item_commodity_info i
        join item_info it
        on it.item_id=i.item_id
        join image g
        on g.image_id=i.avatar_imag
        where i.item_id=#{itemId}
        <if test="brandId">
            and i.brand_id=#{brandId}
        </if>
    </select>
    <select id="selectProductByItemId">
        select *
        FROM item_commodity_info c
                 INNER JOIN
             item_info i
             ON
                 c.item_id = i.item_id
    </select>

    <select id="selectCollectProductByUserId" resultType="com.example.pipayshopapi.entity.vo.ItemCollectionVO">
        select e.origin_path    as commodity_pic,
               i.item_commodity_name,
               i.price,
               i.commodity_id,
               info.item_name,
               g.origin_path as sellerPic,
               info.membership
        FROM item_collection ic
                 INNER JOIN
             item_commodity_info i
             ON
                 ic.commodity_id = i.commodity_id
                 inner join item_info info
                            on info.item_id = i.item_id
        join image g
        on g.image_id=info.user_image
        join image e
        on e.image_id=i.avatar_imag
        WHERE ic.user_id = #{userId}
          AND i.`status` = 0
          AND ic.`status` = 0
        order by ic.update_time desc
            limit #{page},#{limit}

    </select>

    <select id="selectHistoryProductByUserId" resultType="com.example.pipayshopapi.entity.vo.ItemCollectionVO">
        select e.origin_path    as commodity_pic,
               i.item_commodity_name,
               i.price,
               i.commodity_id,
               info.item_name,
               g.origin_path as sellerPic,
               info.membership
        FROM item_commodity_history h
                 INNER JOIN
             item_commodity_info i
             ON
                 h.commodity_id = i.commodity_id
                 inner join item_info info
                            on info.item_id = i.item_id
         join image g
              on g.image_id=info.user_image
         join image e
              on e.image_id=i.avatar_imag
        WHERE h.user_id = #{userId}
        order by h.create_time DESC
            LIMIT #{page},#{limit}

    </select>

    <select id="examineCommodityList" resultType="com.example.pipayshopapi.entity.vo.AuditItemVO">
        SELECT i.commodity_id,
        i.status,
        g.origin_path as avatar_imag,
        i.item_commodity_name,
        i.price
        FROM item_commodity_info i
        join image g
        on g.image_id=i.avatar_imag
        WHERE i.commodity_id = #{itemId}
        and
            i.status in (0,1)
        order by i.update_time DESC
    </select>

    <select id="commodityList" resultType="com.example.pipayshopapi.entity.vo.ItemCommodityVO">
        SELECT c.commodity_id,
               i.item_name,
               g.origin_path  AS seller_pic,
               c.`status`,
               e.origin_path AS commodity_pic,
               c.item_commodity_name,
               c.price,
               iu.membership
        FROM item_info i
                 INNER JOIN user_info u ON i.uid = u.uid
                 INNER JOIN item_info iu on i.uid = iu.uid
                 INNER JOIN item_commodity_info c ON i.item_id = c.item_id
                 join image g on g.image_id=i.user_image
                 join image e on e.image_id=c.avatar_imag
        WHERE i.item_id = #{itemId}
          AND c.`status` != 2
    </select>

    <select id="getInfoByItemId" resultType="com.example.pipayshopapi.entity.vo.ItemCommodityMinVO">
        select i.commodity_id,i.price,i.item_commodity_name,g.origin_path as avatar_imag,i.create_time,i.details
        from item_commodity_info i
        join image g
        on g.image_id=i.avatar_imag
        where i.item_id = #{itemId} and i.status = 0
        <choose>
            <when test="price">
                order By i.price
            </when>
            <when test="!price">
                order By i.price desc
            </when>
            <otherwise>
            </otherwise>
        </choose>
        limit #{page},#{limit}
    </select>
    <select id="selectMembershipByCommodityIdList"
            resultType="com.example.pipayshopapi.entity.vo.ItemCommoditiesVO">
        SELECT
            DISTINCT
        c.commodity_id,
        info.membership,
        c.price,
        c.origin_price,
        c.item_commodity_name,
        c.avatar_imag,
        c.details
        FROM
        item_info info
        INNER JOIN
        item_commodity_info c
        ON
        info.item_id=c.item_id
        WHERE
        c.commodity_id IN
        <foreach item="item" collection="list" index="index" open="(" separator="," close=")">#{item}</foreach>
        <if test="priceOrder!=null and priceOrder==0">order by price asc</if>
        <if test="priceOrder!=null and priceOrder==1">order by price desc</if>
    </select>

    <select id="selectAllCollectProductByUserId" resultType="java.lang.Integer">
        select count(*)
        FROM item_collection ic
                 INNER JOIN
             item_commodity_info i
             ON
                 ic.commodity_id = i.commodity_id
                 inner join item_info info
                            on info.item_id = i.item_id

        WHERE ic.user_id = #{userId}
          AND i.`status` = 0
          AND ic.`status` = 0
    </select>


    <select id="selectAllHistoryProductByUserId" resultType="java.lang.Integer">
        SELECT count(*)
        FROM item_commodity_history h
                 INNER JOIN
             item_commodity_info i
             ON
                 h.commodity_id = i.commodity_id
                 inner join item_info info
                            on info.item_id = i.item_id
        WHERE h.user_id = #{userId}
    </select>

    <select id="getInfoSize" resultType="java.lang.Integer">
        select count(*)
        from item_commodity_info
        where item_id = #{itemId} and status = 0
    </select>

    <select id="getItemIdByOrderId" resultType="java.lang.String">
        SELECT user_image FROM item_info WHERE item_id = (
	SELECT item_id
	FROM item_order_info
	WHERE order_id = #{orderId}
    )
    </select>

<!--    首页商品的多条件过滤查询-->
    <select id="itemSearchCommodity" resultType="com.example.pipayshopapi.entity.vo.ItemCommoditiesVO">
        SELECT
            ici.price, ici.origin_price, ici.item_commodity_name,g.origin_path as avatarImag, ici.commodity_id, ici.details ,ii.membership

        <include refid="itemSearchCommoditySql"/>
            <choose>
                <when test="dto.priceOrder == 0">
                     ORDER BY ici.price ASC, ici.create_time DESC
                </when>
                <when test="dto.priceOrder == 1">
                     ORDER BY ici.price DESC, ici.create_time DESC
                </when>
                <otherwise>
                    ORDER BY ici.create_time DESC
                </otherwise>
            </choose>
            LIMIT
                #{dto.page}, #{dto.limit}
    </select>
    <select id="itemSearchCommodityCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        <include refid="itemSearchCommoditySql"/>
    </select>

    <sql id="itemSearchCommoditySql">
        FROM
            item_commodity_info ici
        JOIN
            item_info ii
        ON
            ici.item_id = ii.item_id
        JOIN
            country_commodity cc
        ON
            cc.commodity_id = ici.commodity_id
        join
            image g
        on
            g.image_id=ici.avatar_imag
        WHERE
            ici.status = 0 AND cc.country_code = #{dto.countryCode} AND ii.status = 0
        <if test="dto.brandId != null">
            and ici.brand_id = #{dto.brandId}
        </if>
        <if test="dto.degreeLoss != null">
            and ici.degree_loss = #{dto.degreeLoss}
        </if>
        <if test="dto.commodityName != null">
            and ici.item_commodity_name LIKE concat('%',#{dto.commodityName},'%')
        </if>
        <if test="dto.freeShippingNum != null ">
            and ici.free_shipping_num = 0
        </if>
    </sql>

</mapper>
